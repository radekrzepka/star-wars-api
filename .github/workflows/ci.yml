name: CI/CD Pipeline

on:
  pull_request:
  push:
    branches: [main]

env:
  NODE_VERSION: "18"
  PNPM_VERSION: "8"

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ci:
    name: CI Pipeline
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: star_wars_test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Lint code
        run: pnpm run lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Build application
        run: pnpm run build

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/star_wars_test_db
        run: |
          echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/star_wars_test_db" > .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_NAME=star_wars_test_db" >> .env
          echo "DB_USER=test_user" >> .env
          echo "DB_PASSWORD=test_password" >> .env
          echo "NODE_ENV=test" >> .env
          echo "PORT=3001" >> .env

      - name: Run database migrations
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/star_wars_test_db
        run: |
          pnpm run db:generate
          pnpm run db:migrate

      - name: Seed test database
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/star_wars_test_db
        run: pnpm run db:seed

      - name: Run unit tests with coverage
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/star_wars_test_db
        run: pnpm run test:cov

      - name: Run end-to-end tests
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/star_wars_test_db
        run: pnpm run test:e2e

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7
